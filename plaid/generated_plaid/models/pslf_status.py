# coding: utf-8

"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from plaid.generated_plaid.configuration import Configuration


class PSLFStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'estimated_eligibility_date': 'str',
        'payments_made': 'float',
        'payments_remaining': 'float'
    }

    attribute_map = {
        'estimated_eligibility_date': 'estimated_eligibility_date',
        'payments_made': 'payments_made',
        'payments_remaining': 'payments_remaining'
    }

    def __init__(self, estimated_eligibility_date=None, payments_made=None, payments_remaining=None, local_vars_configuration=None):  # noqa: E501
        """PSLFStatus - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._estimated_eligibility_date = None
        self._payments_made = None
        self._payments_remaining = None
        self.discriminator = None

        self.estimated_eligibility_date = estimated_eligibility_date
        self.payments_made = payments_made
        self.payments_remaining = payments_remaining

    @property
    def estimated_eligibility_date(self):
        """Gets the estimated_eligibility_date of this PSLFStatus.  # noqa: E501

        The estimated date borrower will have completed 120 qualifying monthly payments. Returned in ISO 8601 format (YYYY-MM-DD).  # noqa: E501

        :return: The estimated_eligibility_date of this PSLFStatus.  # noqa: E501
        :rtype: str
        """
        return self._estimated_eligibility_date

    @estimated_eligibility_date.setter
    def estimated_eligibility_date(self, estimated_eligibility_date):
        """Sets the estimated_eligibility_date of this PSLFStatus.

        The estimated date borrower will have completed 120 qualifying monthly payments. Returned in ISO 8601 format (YYYY-MM-DD).  # noqa: E501

        :param estimated_eligibility_date: The estimated_eligibility_date of this PSLFStatus.  # noqa: E501
        :type estimated_eligibility_date: str
        """

        self._estimated_eligibility_date = estimated_eligibility_date

    @property
    def payments_made(self):
        """Gets the payments_made of this PSLFStatus.  # noqa: E501

        The number of qualifying payments that have been made.  # noqa: E501

        :return: The payments_made of this PSLFStatus.  # noqa: E501
        :rtype: float
        """
        return self._payments_made

    @payments_made.setter
    def payments_made(self, payments_made):
        """Sets the payments_made of this PSLFStatus.

        The number of qualifying payments that have been made.  # noqa: E501

        :param payments_made: The payments_made of this PSLFStatus.  # noqa: E501
        :type payments_made: float
        """

        self._payments_made = payments_made

    @property
    def payments_remaining(self):
        """Gets the payments_remaining of this PSLFStatus.  # noqa: E501

        The number of qualifying payments remaining.  # noqa: E501

        :return: The payments_remaining of this PSLFStatus.  # noqa: E501
        :rtype: float
        """
        return self._payments_remaining

    @payments_remaining.setter
    def payments_remaining(self, payments_remaining):
        """Sets the payments_remaining of this PSLFStatus.

        The number of qualifying payments remaining.  # noqa: E501

        :param payments_remaining: The payments_remaining of this PSLFStatus.  # noqa: E501
        :type payments_remaining: float
        """

        self._payments_remaining = payments_remaining

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PSLFStatus):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PSLFStatus):
            return True

        return self.to_dict() != other.to_dict()
